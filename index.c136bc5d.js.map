{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar cellsList = Array.from(document.querySelectorAll(\".field-cell\"));\nvar procesingOrder = {\n    ArrowRight: [\n        [\n            cellsList[0],\n            cellsList[1],\n            cellsList[2],\n            cellsList[3]\n        ],\n        [\n            cellsList[4],\n            cellsList[5],\n            cellsList[6],\n            cellsList[7]\n        ],\n        [\n            cellsList[8],\n            cellsList[9],\n            cellsList[10],\n            cellsList[11]\n        ],\n        [\n            cellsList[12],\n            cellsList[13],\n            cellsList[14],\n            cellsList[15]\n        ]\n    ],\n    ArrowLeft: [\n        [\n            cellsList[3],\n            cellsList[2],\n            cellsList[1],\n            cellsList[0]\n        ],\n        [\n            cellsList[7],\n            cellsList[6],\n            cellsList[5],\n            cellsList[4]\n        ],\n        [\n            cellsList[11],\n            cellsList[10],\n            cellsList[9],\n            cellsList[8]\n        ],\n        [\n            cellsList[15],\n            cellsList[14],\n            cellsList[13],\n            cellsList[12]\n        ]\n    ],\n    ArrowDown: [\n        [\n            cellsList[0],\n            cellsList[4],\n            cellsList[8],\n            cellsList[12]\n        ],\n        [\n            cellsList[1],\n            cellsList[5],\n            cellsList[9],\n            cellsList[13]\n        ],\n        [\n            cellsList[2],\n            cellsList[6],\n            cellsList[10],\n            cellsList[14]\n        ],\n        [\n            cellsList[3],\n            cellsList[7],\n            cellsList[11],\n            cellsList[15]\n        ]\n    ],\n    ArrowUp: [\n        [\n            cellsList[12],\n            cellsList[8],\n            cellsList[4],\n            cellsList[0]\n        ],\n        [\n            cellsList[13],\n            cellsList[9],\n            cellsList[5],\n            cellsList[1]\n        ],\n        [\n            cellsList[14],\n            cellsList[10],\n            cellsList[6],\n            cellsList[2]\n        ],\n        [\n            cellsList[15],\n            cellsList[11],\n            cellsList[7],\n            cellsList[3]\n        ]\n    ]\n};\nvar gameScore = document.querySelector(\".game-score\");\nvar startBtn = document.querySelector(\".start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageStart = document.querySelector(\".message-start\");\nstartBtn.addEventListener(\"click\", function() {\n    if (startBtn.classList.contains(\"start\")) {\n        messageStart.classList.add(\"hidden\");\n        startBtn.classList.replace(\"start\", \"restart\");\n        startBtn.textContent = \"Restart\";\n        addRandom();\n        addRandom();\n    } else {\n        messageStart.classList.remove(\"hidden\");\n        messageWin.classList.add(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n        startBtn.classList.replace(\"restart\", \"start\");\n        cellsList.forEach(function(cell) {\n            return writeToCell(cell, 0);\n        });\n        startBtn.textContent = \"Start\";\n        gameScore.textContent = 0;\n    }\n});\nfunction addRandom() {\n    var freeCells = cellsList.filter(function(cell) {\n        return cell.classList.length === 1;\n    });\n    var newCellNumber = Math.floor(Math.random() * freeCells.length);\n    var newCellVallue = 2;\n    if (Math.random() >= 0.9) newCellVallue = 4;\n    if (freeCells.length > 1) writeToCell(freeCells[newCellNumber], newCellVallue);\n    if (freeCells.length === 1) {\n        writeToCell(freeCells[newCellNumber], newCellVallue);\n        if (!ifMergable(procesingOrder[\"ArrowRight\"]) && !ifMergable(procesingOrder[\"ArrowDown\"])) messageLose.classList.remove(\"hidden\");\n    }\n}\nfunction ifMergable(order) {\n    return order.some(function(lineOrder) {\n        for(var i = 0; i < 3; i++){\n            if (lineOrder[i].textContent === lineOrder[i + 1].textContent) return true;\n        }\n    });\n}\nfunction writeToCell(cell, number) {\n    if (number === 0) {\n        cell.className = \"field-cell\";\n        cell.textContent = \"\";\n    } else {\n        cell.className = \"field-cell\";\n        cell.classList.add(\"field-cell--\".concat(number));\n        cell.textContent = number;\n    }\n}\nvar arrows = [\n    \"ArrowLeft\",\n    \"ArrowUp\",\n    \"ArrowRight\",\n    \"ArrowDown\"\n];\ndocument.addEventListener(\"keydown\", function(eventtt) {\n    var key = arrows.find(function(arrow) {\n        return arrow === eventtt.key;\n    });\n    if (key) {\n        var order = procesingOrder[key];\n        var ifMovement = false;\n        order.forEach(function(lineOrder) {\n            for(var i = 3, prevContent = -1, previndex = 3; i >= 0; i--){\n                var cellContent = lineOrder[i].textContent;\n                if (cellContent) {\n                    if (cellContent === prevContent) {\n                        writeToCell(lineOrder[previndex], prevContent * 2);\n                        writeToCell(lineOrder[i], 0);\n                        cellContent *= 2;\n                        prevContent = -1;\n                        i = previndex;\n                        ifMovement = true;\n                        gameScore.textContent = Number(gameScore.textContent) + cellContent;\n                        if (cellContent === 2048) messageWin.classList.remove(\"hidden\");\n                    }\n                    if (i !== previndex) {\n                        if (lineOrder[previndex].textContent && i !== previndex - 1) {\n                            writeToCell(lineOrder[previndex - 1], cellContent);\n                            writeToCell(lineOrder[i], 0);\n                            previndex = previndex - 1;\n                            prevContent = cellContent;\n                            ifMovement = true;\n                        } else if (!lineOrder[previndex].textContent) {\n                            writeToCell(lineOrder[previndex], cellContent);\n                            writeToCell(lineOrder[i], 0);\n                            prevContent = cellContent;\n                            ifMovement = true;\n                        } else {\n                            prevContent = cellContent;\n                            previndex = i;\n                        }\n                    } else prevContent = cellContent;\n                }\n            }\n        });\n        if (ifMovement) addRandom();\n    }\n});\n\n//# sourceMappingURL=index.c136bc5d.js.map\n","'use strict';\n\nconst cellsList = Array.from(document.querySelectorAll('.field-cell'));\nconst procesingOrder = {\n  ArrowRight: [\n    [cellsList[0], cellsList[1], cellsList[2], cellsList[3]],\n    [cellsList[4], cellsList[5], cellsList[6], cellsList[7]],\n    [cellsList[8], cellsList[9], cellsList[10], cellsList[11]],\n    [cellsList[12], cellsList[13], cellsList[14], cellsList[15]],\n  ],\n  ArrowLeft: [\n    [cellsList[3], cellsList[2], cellsList[1], cellsList[0]],\n    [cellsList[7], cellsList[6], cellsList[5], cellsList[4]],\n    [cellsList[11], cellsList[10], cellsList[9], cellsList[8]],\n    [cellsList[15], cellsList[14], cellsList[13], cellsList[12]],\n  ],\n  ArrowDown: [\n    [cellsList[0], cellsList[4], cellsList[8], cellsList[12]],\n    [cellsList[1], cellsList[5], cellsList[9], cellsList[13]],\n    [cellsList[2], cellsList[6], cellsList[10], cellsList[14]],\n    [cellsList[3], cellsList[7], cellsList[11], cellsList[15]],\n  ],\n  ArrowUp: [\n    [cellsList[12], cellsList[8], cellsList[4], cellsList[0]],\n    [cellsList[13], cellsList[9], cellsList[5], cellsList[1]],\n    [cellsList[14], cellsList[10], cellsList[6], cellsList[2]],\n    [cellsList[15], cellsList[11], cellsList[7], cellsList[3]],\n  ],\n};\nconst gameScore = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.classList.contains('start')) {\n    messageStart.classList.add('hidden');\n    startBtn.classList.replace('start', 'restart');\n    startBtn.textContent = 'Restart';\n    addRandom();\n    addRandom();\n  } else {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    startBtn.classList.replace('restart', 'start');\n    cellsList.forEach(cell => writeToCell(cell, 0));\n    startBtn.textContent = 'Start';\n    gameScore.textContent = 0;\n  }\n});\n\nfunction addRandom() {\n  const freeCells = cellsList.filter(cell => cell.classList.length === 1);\n  const newCellNumber = Math.floor(Math.random() * freeCells.length);\n  let newCellVallue = 2;\n\n  if (Math.random() >= 0.9) {\n    newCellVallue = 4;\n  }\n\n  if (freeCells.length > 1) {\n    writeToCell(freeCells[newCellNumber], newCellVallue);\n  }\n\n  if (freeCells.length === 1) {\n    writeToCell(freeCells[newCellNumber], newCellVallue);\n\n    if (\n      !ifMergable(procesingOrder['ArrowRight'])\n      && !ifMergable(procesingOrder['ArrowDown'])\n    ) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n}\n\nfunction ifMergable(order) {\n  return order.some(lineOrder => {\n    for (let i = 0; i < 3; i++) {\n      if (lineOrder[i].textContent === lineOrder[i + 1].textContent) {\n        return true;\n      }\n    }\n  });\n}\n\nfunction writeToCell(cell, number) {\n  if (number === 0) {\n    cell.className = 'field-cell';\n    cell.textContent = '';\n  } else {\n    cell.className = 'field-cell';\n    cell.classList.add(`field-cell--${number}`);\n    cell.textContent = number;\n  }\n}\n\nconst arrows = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'];\n\ndocument.addEventListener('keydown', eventtt => {\n  const key = arrows.find(arrow => arrow === eventtt.key);\n\n  if (key) {\n    const order = procesingOrder[key];\n    let ifMovement = false;\n\n    order.forEach(lineOrder => {\n      for (let i = 3, prevContent = -1, previndex = 3; i >= 0; i--) {\n        let cellContent = lineOrder[i].textContent;\n\n        if (cellContent) {\n          if (cellContent === prevContent) {\n            writeToCell(lineOrder[previndex], prevContent * 2);\n            writeToCell(lineOrder[i], 0);\n            cellContent *= 2;\n            prevContent = -1;\n            i = previndex;\n            ifMovement = true;\n            gameScore.textContent = Number(gameScore.textContent) + cellContent;\n\n            if (cellContent === 2048) {\n              messageWin.classList.remove('hidden');\n            }\n          }\n\n          if (i !== previndex) {\n            if (lineOrder[previndex].textContent && i !== previndex - 1) {\n              writeToCell(lineOrder[previndex - 1], cellContent);\n              writeToCell(lineOrder[i], 0);\n              previndex = previndex - 1;\n              prevContent = cellContent;\n              ifMovement = true;\n            } else if (!lineOrder[previndex].textContent) {\n              writeToCell(lineOrder[previndex], cellContent);\n              writeToCell(lineOrder[i], 0);\n\n              prevContent = cellContent;\n              ifMovement = true;\n            } else {\n              prevContent = cellContent;\n              previndex = i;\n            }\n          } else {\n            prevContent = cellContent;\n          }\n        }\n      }\n    });\n\n    if (ifMovement) {\n      addRandom();\n    }\n  }\n});\n"],"names":["cellsList","Array","from","document","querySelectorAll","procesingOrder","ArrowRight","ArrowLeft","ArrowDown","ArrowUp","gameScore","querySelector","startBtn","messageWin","messageLose","messageStart","addRandom","freeCells","filter","cell","classList","length","newCellNumber","Math","floor","random","newCellVallue","writeToCell","ifMergable","remove","order","some","lineOrder","i","textContent","number","className","add","concat","addEventListener","contains","replace","forEach","arrows","eventtt","key","find","arrow","ifMovement","prevContent","previndex","cellContent","Number"],"version":3,"file":"index.c136bc5d.js.map"}